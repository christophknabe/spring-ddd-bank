#Application specific configuration for usage by Spring for running the REST server. Knabe 2017-09-25

#Use the standard port for Tomcat:
#server.port=8080

#Use an arbitrary free port for Tomcat (useful if several users are running a Tomcat on the same server):
#server.port=0

#Use 8080 as default port, but enable specific configuration on the command line by for example -Dport=9000
#See https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-use-short-command-line-arguments
server.port=${port:8080}

#For production scenario use a file-based Derby database with the given name in the Derby system home directory.
#Create it, if it does'nt already exist.
#spring.datasource.url=jdbc:derby:directory:${user.home}/spring-ddd-bank-db;create=true
spring.datasource.url=jdbc:derby:directory:spring-ddd-bank-db;create=true
#You can configure Derby in the Derby system home directory in file derby.properties 

#At startup let Hibernate do schema update without content deletion.
#See https://stackoverflow.com/questions/21968965/disable-table-recreation-in-spring-boot-application
spring.jpa.hibernate.ddl-auto=update

#Use the default port for Derby:
derby.port=

#Use an arbitrary free port for Derby (useful if several users are running a Derby on the same server):
#derby.port=0

#Use a specific port for Derby:
#derby.port=1527

logging.level.org.springframework.security: INFO